pipeline {
    agent {
      node {
        // spin up a pod to run this build on
        label 'docker'
      }
    }
    options {
        timeout(time: 45, unit: 'MINUTES')
    }
    environment {
        VERSION = sh(returnStdout: true, script: "git describe --tags || echo latest").trim()
        BRANCH = sh(returnStdout: true, script: "git branch | grep '*' | cut -d ' ' -f2").trim()
        IMAGE_NAME = "viaa-tools/ldap2deewee"
        REGISTRY = "docker-registry-default.meemoo-596946-2bc857e5f10eb63ab790a3a1d19a696c-0001.eu-de.containers.appdomain.cloud"
    }
    stages {
        stage('Build docker image') {
            steps {
                sh './jenkins/scripts/build.sh "${REGISTRY}" "${IMAGE_NAME}" "${VERSION}"'
            }
        }
        stage('Run tests in container') {
            steps {
                sh './jenkins/scripts/test.sh "${REGISTRY}" "${IMAGE_NAME}" "${VERSION}"'
            }
        }
        stage('Run linter in container') {
            steps {
                sh './jenkins/scripts/lint.sh "${REGISTRY}" "${IMAGE_NAME}" "${VERSION}"'
            }
        }
        stage('Tag docker image to latest') {
            steps {
                sh './jenkins/scripts/tag.sh "${REGISTRY}" "${IMAGE_NAME}" "${VERSION}"'
            }
        }
        stage('Push docker image to repo') {
            steps {
                sh './jenkins/scripts/push.sh "${REGISTRY}" "${IMAGE_NAME}"'
            }
        }
    }
    post {
        always {
                sh '''#!/bin/bash
                   docker container rm ldap2deewee_test
                   docker container rm ldap2deewee_lint
                   '''
                cleanWs()
        }
    }
}